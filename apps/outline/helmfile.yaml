environments:
  default:
    secrets:
      - ../globals.sops.yaml
      - default.sops.yaml
---
repositories:
  - name: bitnami
    url: registry-1.docker.io/bitnamicharts
    oci: true

releases:
  - name: outline-cnpg-16
    chart: ../../charts/cnpg-cluster
    values:
      - release: 16
      - storage:
          size: 5Gi
      - postgresql:
          parameters:
            max_slot_wal_keep_size: "2GB"
      - backups:
          enabled: true
          s3: {{ toYaml .Values.cnpg.s3 | nindent 12 }}
  - name: outline-redis
    chart: bitnami/redis
    version: 20.2.0
    values:
      - architecture: standalone
      - auth:
          enabled: false
      - master:
          persistence:
            enabled: false
  - name: outline
    chart: ../../charts/outline
    values:
      - image:
          repository: ghcr.io/japan7/outline
          tag: oidc-groups@sha256:2fe33ac92209b3b4ac867bb2dce10c5aaca8912718aac87b7aa4d084c0a6d02a # renovate
      - updateStrategy:
          type: Recreate
      - cnpg:
          secretName: outline-cnpg-16-app
      - env: |
          {{ .Values.env | nindent 10 }}
      - affinity:
          podAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: cnpg.io/cluster
                        operator: In
                        values:
                          - outline-cnpg-16
                      - key: cnpg.io/instanceRole
                        operator: In
                        values:
                          - primary
                  topologyKey: kubernetes.io/hostname
      - persistence:
          labels:
            recurring-job.longhorn.io/source: enabled
            recurring-job-group.longhorn.io/default: enabled
            recurring-job.longhorn.io/longhorn-backup: enabled
      - ingress:
          host: docs.{{ .Values.domain }}
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.middlewares: "{{ .Values.traefik.namespace }}-compress@kubernetescrd"
            cert-manager.io/cluster-issuer: letsencrypt
