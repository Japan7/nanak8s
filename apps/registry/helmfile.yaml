environments:
  default:
    secrets:
      - ../globals.sops.yaml
      - default.sops.yaml
---
repositories:
  - name: twuni
    url: https://helm.twun.io

releases:
  - name: registry
    chart: twuni/docker-registry
    version: 2.2.3
    values:
      - updateStrategy:
          type: Recreate
      - secrets:
          haSharedSecret: "{{ .Values.haSharedSecret }}"
          htpasswd: "{{ .Values.htpasswd }}"
      - garbageCollect:
          enabled: false # FIXME: https://github.com/distribution/distribution/issues/3178
      - configData:
          storage:
            cache:
              blobdescriptor: disabled
      - affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                preference:
                  matchExpressions:
                    - key: topology.kubernetes.io/region
                      operator: In
                      values:
                        - eu-west
      - persistence:
          enabled: true
          deleteEnabled: true
      - ingress:
          enabled: true
          className: null
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.middlewares: "{{ .Values.traefik.namespace }}-compress@kubernetescrd"
            cert-manager.io/cluster-issuer: letsencrypt
          hosts:
            - "{{ .Values.domain }}"
          path: /v2/
          tls:
            - hosts:
                - "{{ .Values.domain }}"
              secretName: "{{ .Values.domain }}-tls"
    # strategicMergePatches:
    #   - apiVersion: batch/v1
    #     kind: CronJob
    #     metadata:
    #       name: registry-docker-registry-garbage-collector
    #       namespace: "{{ .Namespace }}"
    #     spec:
    #       jobTemplate:
    #         spec:
    #           template:
    #             spec:
    #               affinity:
    #                 podAffinity:
    #                   requiredDuringSchedulingIgnoredDuringExecution:
    #                     - labelSelector:
    #                         matchExpressions:
    #                           - key: app
    #                             operator: In
    #                             values:
    #                               - docker-registry
    #                           - key: release
    #                             operator: In
    #                             values:
    #                               - registry
    #                       topologyKey: kubernetes.io/hostname
  - name: registry-extras
    chart: ../../charts/registry-extras
    values:
      - registryCredentials:
          registry: "{{ .Values.domain }}"
          username: "{{ .Values.username }}"
          password: "{{ .Values.password }}"
          namespaces:
            - emails
            - website
