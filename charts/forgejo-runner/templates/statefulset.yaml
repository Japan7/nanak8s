apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "common.names.name" . }}
      volumes:
        - name: config
          configMap:
            name:  "{{ .Release.Name }}-config"
        - name: sock-dir
          emptyDir: {}
      containers:
        - name: runner
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-token"
                  key: token
          command: ["sh", "-c", "forgejo-runner create-runner-file --instance {{ .Values.instance }} --secret $(REGISTRATION_TOKEN) && forgejo-runner --config /data/config.yaml daemon"]
          volumeMounts:
            - name: config
              mountPath: /data/config.yaml
              subPath: config.yaml
            - name: sock-dir
              mountPath: /var/run
            {{- if .Values.cache.persistence.enabled }}
            - name: cache
              mountPath: {{ .Values.config.cache.dir | default "/data/.cache/actcache" }}
            {{- end }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
        - name: dind
          image: "{{ .Values.dind.image.repository }}:{{ .Values.dind.image.tag }}"
          imagePullPolicy: "{{ .Values.dind.image.pullPolicy }}"
          # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/25380#note_393553417
          # https://blog.zespre.com/dind-mtu-size-matters.html
          args:
            {{- range .Values.dind.dns }}
            - --dns={{ . }}
            {{- end }}
            {{- with .Values.dind.mtu }}
            - --mtu={{ . }}
            {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: sock-dir
              mountPath: /var/run
  {{- if .Values.cache.persistence.enabled }}
  volumeClaimTemplates:
    {{- with .Values.cache.persistence }}
    - metadata:
        name: cache
      spec:
        storageClassName: {{ .storageClass }}
        accessModes:
          - {{ .accessMode }}
        resources:
          requests:
            storage: {{ .size }}
    {{- end }}
  {{- end }}
