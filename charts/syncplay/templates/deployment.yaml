apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-password"
type: Opaque
stringData:
  password: "{{ .Values.password }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      volumes:
        - name: certs
          emptyDir: {}
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image }}"
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-password"
                  key: password
          args: ["--password", "$(PASSWORD)", "--certs", "/certs"]
          volumeMounts:
            - name: certs
              mountPath: /certs
          ports:
            - containerPort: 8999
      initContainers:
        - name: init-certs
          image: alpine
          command:
            - sh
            - -c
            - cd /certs && rm *.pem && wget {{ .Values.certsDumperService }}/{{ .Values.ingress.host }}/fullchain.pem && wget {{ .Values.certsDumperService }}/{{ .Values.ingress.host }}/privkey.pem
          volumeMounts:
            - name: certs
              mountPath: /certs
