apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-data"
        - name: system
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-system"
        - name: config
          secret:
            secretName: "{{ .Release.Name }}-config"
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: SFTPGO_CONFIG_FILE
              value: /config/sftpgo.json
            - name: SFTPGO_DATA_PROVIDER__USERS_BASE_DIR
              value: /srv/sftpgo/users
          volumeMounts:
            - name: data
              mountPath: /srv/sftpgo
            - name: system
              mountPath: /var/lib/sftpgo
            - name: config
              mountPath: /config
          ports:
            - name: sftp
              containerPort: 2022
            - name: http
              containerPort: 8080
        {{- .Values.extraContainers | toYaml | nindent 8 }}
