apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-env
type: Opaque
stringData:
  env: |
    {{ .Values.env | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      volumes:
      - name: env
        secret:
          secretName: {{ .Release.Name }}-env
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: PSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cnpg.name }}-{{ .Values.cnpg.user }}
                  key: username
            - name: PSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cnpg.name }}-{{ .Values.cnpg.user }}
                  key: password
            - name: DATABASE_URL
              value: postgresql://$(PSQL_USERNAME):$(PSQL_PASSWORD)@{{ .Values.cnpg.name }}-rw/{{ .Values.cnpg.database }}
          command: ["sh", "-xc", "set -a && . /env && yarn db:migrate --env=production-ssl-disabled && yarn start"]
          volumeMounts:
            - name: env
              subPath: env
              mountPath: /env
          ports:
            - containerPort: 3000
