apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
      annotations:
        checksum/env: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: env
          secret:
            secretName: {{ .Release.Name }}-env
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cnpg.secretName }}
                  key: uri
          command: ["sh", "-xc", "set -a && . /env && yarn db:migrate --env=production-ssl-disabled && yarn start"]
          volumeMounts:
            - name: env
              mountPath: /env
              subPath: env
            - name: data
              mountPath: /var/lib/outline/data
          ports:
            - containerPort: 3000
