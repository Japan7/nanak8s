apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64 # no arm64 image available
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-uploads
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - secretRef:
                name: {{ .Release.Name }}-secret
          env:
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cnpg.name }}-superuser
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.cnpg.name }}-superuser
                  key: password
          volumeMounts:
            - name: uploads
              mountPath: /opt/app/public/uploads
          ports:
            - containerPort: 1337
          livenessProbe:
            httpGet:
              path: /
              port: 1337
          readinessProbe:
            httpGet:
              path: /
              port: 1337
